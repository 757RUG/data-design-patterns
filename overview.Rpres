Data design patterns for data projects
======================================
css: overview.css
Pierce Edmiston  
MadR Meetup  
5.4.16

```{r, config, echo = FALSE}
library(knitr)
opts_chunk$set(
  echo = FALSE,
  fig.align = "center"
)
```

About me
========

![Pierce Edmiston](https://www.gravatar.com/avatar/2ab58652a5dfa36039604b6b45d841fd)

What is a data project?
=======================
- **Reproducible**. Easy to redo everything on any computer.
- **Replicable**. New data, same code.
- **Reuseable**. New context, same analyses.

> A data project is not a data set.

What is a design pattern?
=========================

> Structure for your code decided by someone else.

- Upfront cost to prevent inevitable headaches.
- Unified structure helps when debugging.
- Easy to implement new features.

Other design patterns for data science
======================================

- [Netflix](http://bit.ly/netflix-design-patterns)
- [Cookiecutter](https://drivendata.github.io/cookiecutter-data-science/)
- [ProjectTemplate](http://projecttemplate.net/index.html)
- [R projects](http://nicercode.github.io/blog/2013-04-05-projects/)
- [R projects as packages](http://www.carlboettiger.info/2012/05/06/research-workflow.html)

Design patterns for data projects
=================================
- **Egg Projects**. A useful configuration of R packages and RStudio projects.
- **Parallel Reports**. The parallelization of code and report writing for
  improved interactive development.
- **DRY Plots**. A small pattern for getting the most out of ggplot.

<!-- Egg projects -->

===
```{r, engine = "dot"}
digraph {
  fontname = helvetica;
  fontsize = 20;
  rankdir = LR;
  size = "20!";

  node[fontname = helvetica];
  node[fontsize = 10; size = 20];

  label = "Egg projects";
  labelloc = top;

  egg[label = "R pkg", shape = "egg", height = 1];
  node[shape = "none"]{data, reports, presentations};

  data -> egg -> {reports, presentations}[headport = "w"];
}
```

<!-- Parallel reports -->

===
```{r, engine = "dot"}
digraph {
  fontname = helvetica;
  fontsize = 20;
  rankdir = LR;
  size = "20!";

  node[fontname = helvetica];
  node[fontsize = 10; size = 20; shape = "none"];

  label = "Parallel reports";
  labelloc = top;

  {setup, models, plots} -> report[arrowhead = "none"; tailport = "e"; headport = "w"];

  setup[label = "setup.R"];
  models[label = "models.R"];
  plots[label = "plots.R"];

  report[label = "report.Rmd"];
}
```

<!-- DRY plots -->

===
```{r, engine = "dot"}
digraph {
  fontname = helvetica;
  fontsize = 20;
  rankdir = LR;
  size = "20!";

  node[fontname = helvetica];
  node[fontsize = 10; size = 20; shape = "none"];

  label = "DRY plots";
  labelloc = "top";

  base -> {overall, by_item, model_preds}[tailport = "e", headport = "w", arrowhead = "none"];

  base[label = "base plot"];
  overall[label = "overall.png"];
  by_item[label = "by_item.png"];
  model_preds[label = "model_preds.png"];
}
```

Sample projects
===============

- **github-pulse**. Analyze Github event data.
- **property-verification**. A reproducible psychology experiment.
- **wikischolar**. Understanding changes in Wikipedia article quality.
